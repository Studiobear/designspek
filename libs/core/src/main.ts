// import { shortHandAttr } from './shorthand'
import { addSpace } from './space'
import { Spek, Theme } from './types'

const PKG_VERSION = 'PKG_VERSION'
export const version = PKG_VERSION

/**
 * Generates Designspek theme from specification
 * @param {object: Spek} - Designspek specification object
 * @return {object: Theme} Designspek theme object
 */

export const createTheme = (spec: Spek): Theme => {
  let theme = {}
  // add Space:
  theme = { ...theme, ...addSpace(spec) }
  // add Typography:

  // add Color:

  // add Elements:

  return theme
}

/**
 * Combines style object with Designspek generated theme
 * @param {object} style - camelCased CSS properties or shorthand equivalents
 * @param {object: Theme} theme - theme generated by createTheme()
 * @param {boolean} ssr - default: false. If true, returns string of raw CSS
 * @return {string} CSS classname or string of raw CSS; CSS class is appended to HTML head.
 */

export const styled = (style: {}, theme: Theme, ssr?: boolean): string => {
  let css = 'className'
  return css
}
